{"version":3,"file":"ng-web-cam.js","sources":["ng://ng-web-cam/lib/ng-web-cam.service.ts","ng://ng-web-cam/lib/ng-web-cam.component.ts","ng://ng-web-cam/lib/ng-web-cam.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgWebCamService {\n\n  constructor() { }\n}\n","import { Component, OnInit, AfterViewInit, OnDestroy, Input, EventEmitter, Output } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'ng-webcam',\n  templateUrl: './ng-web-cam.component.html',\n  styleUrls: ['./ng-web-cam.component.css']\n})\nexport class NgWebCamComponent implements OnInit, AfterViewInit, OnDestroy {\n  /**Css to style your webcam\n   * This will override existing default Css\n   */\n  @Input() styleCss: string = '';\n\n  /**Css to style your webcam container\n   * This will override existing default Css\n   */\n  @Input() containerCss: string = '';\n\n  /**This is an object read by User media\n   * This will set your initial media Parameters\n   */\n  @Input() mediaOptions: any = null;\n\n  /**Enables Audio too with webcam\n   * Build your own parameter\n   */\n  @Input() enableAudio: boolean = false;\n\n  /**Enables frame rate configuration\n   * Build your own parameter\n   */\n  @Input() frameRate: any = null;\n\n  /**Type of the captured image\n   * Build your own image extention\n   */\n  @Input() mimeType: string = 'image/png';\n\n  /**To subscribe to webcam changes\n   * Subscription object\n   */\n  webcamSubscrib: Subscription;\n\n  /**To subscribe snap capture\n   * Subscription object\n   */\n  triggerCaptureSubscrib: Subscription;\n\n  /**Input parameter to handle snap capture\n   * Input decorator\n   */\n  @Input('triggerCapture')\n  set triggerCapture(triggerCapture: Observable<void>) {\n    if (this.triggerCaptureSubscrib) {\n      this.triggerCaptureSubscrib.unsubscribe();\n    }\n\n    this.triggerCaptureSubscrib = triggerCapture.subscribe(() => {\n      this.takepicture();\n    });\n  }\n\n  /**Input parameter to handle webcam start/stop\n   * Input decorator\n   */\n  @Input('webCamControl')\n  set webCamControl(webCamControl: Observable<boolean>) {\n    if (this.webcamSubscrib) {\n      this.webcamSubscrib.unsubscribe();\n    }\n\n    this.webcamSubscrib = webCamControl.subscribe(control => {\n      if (control) {\n        if (this.video && this.video.srcObject) {\n          //* already on\n        } else {\n          this.stop();\n          this.start();\n        }\n      } else {\n        this.stop();\n      }\n    });\n  }\n\n  /**Parameter to get height of the video\n   * getter of Input decorator\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  /**Input parameter to get height of the video\n   * Not required if mediaOptions Input decorator is set\n   * Input decorator\n   */\n  @Input('height')\n  set height(value: number) {\n      this._height = value;\n      this.updateView();\n  }\n\n  /**Parameter to get width of the video\n   * getter of Input decorator\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**Input parameter to get width of the video\n   * Not required if mediaOptions Input decorator is set\n   * Input decorator\n   */\n  @Input('width')\n  set width(value: number) {\n    this._width = value;\n    this.updateView();\n  }\n\n  /**Output parameter to emit image src of captured image\n   * Output decorator\n   */\n  @Output() capturedImage = new EventEmitter<string>();\n\n  /**Output parameter to emit video tag of webcam\n   * This can be used by people working around Machine learning for training purposes\n   * Output decorator\n   */\n  @Output() webCamElement = new EventEmitter<any>();\n\n  /**Output parameter to emit error caused during library run\n   * This can be useful to determine error\n   * Output decorator\n   */\n  @Output() handleError = new EventEmitter<any>();\n\n  video: any;\n  canvas: any;\n  paramObj: any;\n  frameRateObj: any;\n  _height = 720;\n  _width = 1280;\n\n  constructor() {\n    this._height = 720;\n    this._width = 1280;\n   }\n\n  ngOnInit() {\n    this.video = document.querySelector('#ngWebCamVideoElement');\n    this.canvas = document.getElementById('ngWebCamCanvas');\n    let ctx = this.canvas.getContext('2d');\n    this.video.addEventListener('loadedmetadata', function() {\n      let vid: any = document.querySelector('#ngWebCamVideoElement');\n      ctx.translate(vid.videoWidth, 0);\n      ctx.scale(-1, 1);\n    });\n\n    this.start();\n  }\n\n  ngAfterViewInit() {\n    if (this.styleCss) {\n      this.video.style = this.styleCss;\n    }\n    if (this.containerCss) {\n      let container: any = document.getElementById('ngWebCamContainer');\n      container.style = this.containerCss;\n    }\n  }\n\n\n  takepicture() {\n    let context = this.canvas.getContext('2d');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    let vid: any = document.querySelector('#ngWebCamVideoElement');\n    context.drawImage(vid, 0, 0, this.width, this.height);\n\n    let data: string = this.canvas.toDataURL(this.mimeType);\n    this.capturedImage.emit(data);\n  }\n\n  updateView() {\n    this.stop();\n    this.start();\n  }\n\n  start() {\n    if (navigator.mediaDevices.getUserMedia) {\n      if (this.mediaOptions) {\n        let mediaOptionsParsed = JSON.parse(this.mediaOptions);\n        this.paramObj = {\n          ...mediaOptionsParsed\n      };\n    } else {\n        if (this.frameRate) {\n          let frameRateParsed = JSON.parse(this.frameRate);\n          this.frameRateObj = {\n            ...frameRateParsed\n          }\n        } else {\n          this.frameRateObj = { ideal: 10, max: 30 };\n        }\n        this.paramObj = {audio: this.enableAudio, video: {\n              width: { ideal: this.width},\n              height: { ideal: this.height},\n              frameRate: this.frameRateObj\n            }\n          };\n      }\n      navigator.mediaDevices.getUserMedia(this.paramObj)\n        .then(stream => {\n          this.video.srcObject = stream;\n          let vid = document.querySelector('#ngWebCamVideoElement');\n          this.webCamElement.emit(vid);\n        })\n        .catch(err => {\n          this.handleError.emit(err);\n        });\n    }\n  }\n\n  stop() {\n    if (this.video && this.video.srcObject) {\n      let stream = this.video.srcObject;\n      let tracks = stream.getTracks();\n\n      for (let i = 0; i < tracks.length; i++) {\n        let track = tracks[i];\n        track.stop();\n      }\n      this.video.srcObject = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.video = null;\n    this.canvas = null;\n    this.webcamSubscrib.unsubscribe();\n    this.triggerCaptureSubscrib.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgWebCamComponent } from './ng-web-cam.component';\n\n\n\n@NgModule({\n  declarations: [NgWebCamComponent],\n  imports: [\n  ],\n  exports: [NgWebCamComponent]\n})\nexport class NgWebCamModule { }\n"],"names":[],"mappings":"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"}